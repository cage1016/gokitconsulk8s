// Code generated by protoc-gen-go. DO NOT EDIT.
// source: foosvc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FooRequest struct {
	S                    string   `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FooRequest) Reset()         { *m = FooRequest{} }
func (m *FooRequest) String() string { return proto.CompactTextString(m) }
func (*FooRequest) ProtoMessage()    {}
func (*FooRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d485e610e2af7e8b, []int{0}
}

func (m *FooRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FooRequest.Unmarshal(m, b)
}
func (m *FooRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FooRequest.Marshal(b, m, deterministic)
}
func (m *FooRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FooRequest.Merge(m, src)
}
func (m *FooRequest) XXX_Size() int {
	return xxx_messageInfo_FooRequest.Size(m)
}
func (m *FooRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FooRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FooRequest proto.InternalMessageInfo

func (m *FooRequest) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

type FooReply struct {
	Res                  string   `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FooReply) Reset()         { *m = FooReply{} }
func (m *FooReply) String() string { return proto.CompactTextString(m) }
func (*FooReply) ProtoMessage()    {}
func (*FooReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d485e610e2af7e8b, []int{1}
}

func (m *FooReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FooReply.Unmarshal(m, b)
}
func (m *FooReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FooReply.Marshal(b, m, deterministic)
}
func (m *FooReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FooReply.Merge(m, src)
}
func (m *FooReply) XXX_Size() int {
	return xxx_messageInfo_FooReply.Size(m)
}
func (m *FooReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FooReply.DiscardUnknown(m)
}

var xxx_messageInfo_FooReply proto.InternalMessageInfo

func (m *FooReply) GetRes() string {
	if m != nil {
		return m.Res
	}
	return ""
}

func (m *FooReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*FooRequest)(nil), "pb.FooRequest")
	proto.RegisterType((*FooReply)(nil), "pb.FooReply")
}

func init() { proto.RegisterFile("foosvc.proto", fileDescriptor_d485e610e2af7e8b) }

var fileDescriptor_d485e610e2af7e8b = []byte{
	// 137 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xcb, 0xcf, 0x2f,
	0x2e, 0x4b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x92, 0xe2, 0xe2,
	0x72, 0xcb, 0xcf, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0xe2, 0xe1, 0x62, 0x2c, 0x96,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0x2c, 0x56, 0xd2, 0xe3, 0xe2, 0x00, 0xcb, 0x15, 0xe4,
	0x54, 0x0a, 0x09, 0x70, 0x31, 0x17, 0xa5, 0xc2, 0xe4, 0x40, 0x4c, 0x90, 0x48, 0x6a, 0x51, 0x91,
	0x04, 0x13, 0x44, 0x24, 0xb5, 0xa8, 0xc8, 0x48, 0x9f, 0x8b, 0xcd, 0x0d, 0x6c, 0xbe, 0x90, 0x2a,
	0x17, 0xb3, 0x5b, 0x7e, 0xbe, 0x10, 0x9f, 0x5e, 0x41, 0x92, 0x1e, 0xc2, 0x78, 0x29, 0x1e, 0x38,
	0xbf, 0x20, 0xa7, 0x52, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x0e, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xb4, 0x2b, 0xed, 0x04, 0x97, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FoosvcClient is the client API for Foosvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FoosvcClient interface {
	Foo(ctx context.Context, in *FooRequest, opts ...grpc.CallOption) (*FooReply, error)
}

type foosvcClient struct {
	cc *grpc.ClientConn
}

func NewFoosvcClient(cc *grpc.ClientConn) FoosvcClient {
	return &foosvcClient{cc}
}

func (c *foosvcClient) Foo(ctx context.Context, in *FooRequest, opts ...grpc.CallOption) (*FooReply, error) {
	out := new(FooReply)
	err := c.cc.Invoke(ctx, "/pb.Foosvc/Foo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FoosvcServer is the server API for Foosvc service.
type FoosvcServer interface {
	Foo(context.Context, *FooRequest) (*FooReply, error)
}

func RegisterFoosvcServer(s *grpc.Server, srv FoosvcServer) {
	s.RegisterService(&_Foosvc_serviceDesc, srv)
}

func _Foosvc_Foo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FooRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoosvcServer).Foo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Foosvc/Foo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoosvcServer).Foo(ctx, req.(*FooRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Foosvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Foosvc",
	HandlerType: (*FoosvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Foo",
			Handler:    _Foosvc_Foo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "foosvc.proto",
}
